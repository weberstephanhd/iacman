
#############################################################################
# Standard IO Operations
#############################################################################

#
# remember original outputs
#
exec 3>&1
exec 4>&2
exec 5>&2

declare -g -A DEBUG
location=debug

color_mode=X

debug()
{
  if [ ${DEBUG[$location]+set} ]; then
    echo "$location: $*" >&5
  fi
}

COLOR_RED=$'\e[0;91m'
COLOR_YELLOW=$'\e[0;92m'
COLOR_GREEN=$'\e[0;32m'
COLOR_BLUE=$'\e[0;34m'
COLOR_MAGENTA=$'\e[0;35m'
COLOR_CYAN=$'\e[0;36m'
COLOR_LIGHT=$'\e[0;37m'
COLOR_DARK=$'\e[0;90m'
COLOR_END=$'\e[0m'

remove_color()
{
  sed -e 's/\[0\(;..\)\{0,1\}m//g'  <<< "$1"
}

_trm()
{
  remove_color "$(color_green "$*")"
}

_echo()
{
  local c="$1"
  local o
  shift
  if [ "$1" = "-n" ]; then
    o="-n"
    shift
  fi
  [ "$color_mode" ] && echo $o "${c}$*${COLOR_END}"  || echo $o "$@"
}

info()
{
  color_info "$@" >&3
}

found()
{
  color_found "$@" >&3
}

confirm()
{
  color_confirm "$@" >&3
}

hint()
{
  color_hint "$@" >&3
}

title()
{
  color_title "$@" >&3
}

warn()
{
  color_warn "$@" >&3
}

error()
{
  color_error "$@" >&4
}

Error()
{
  error "$@"
  exit 1
  return 1
}

#
# logical colors
#
color_found()
{
  echo "$@"
}

color_confirm()
{
  color_green "$@"
}

color_info()
{
  color_dark "$@"
}

color_warn()
{
  color_yellow "$@"
}

color_error()
{
  color_red "$@"
}

color_hint()
{
  color_blue "$@"
}

color_title()
{
  color_cyan "$@"
}

#
# technical colors
#
color_red()
{
  _echo "${COLOR_RED}" "$@"
}

color_yellow()
{
  _echo "${COLOR_YELLOW}" "$@"
}

color_cyan()
{
  _echo "${COLOR_CYAN}" "$@"
}

color_dark()
{
  _echo "${COLOR_DARK}" "$@"
}

color_green()
{
  _echo "${COLOR_GREEN}" "$@"
}

color_blue()
{
  _echo "${COLOR_BLUE}" "$@"
}

